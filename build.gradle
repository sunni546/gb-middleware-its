buildscript {
    ext {
        protobufVersion = '4.31.1'
        protobufPluginVersion = '0.9.4'
        grpcVersion = '1.73.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version "${protobufPluginVersion}"
}

ext {
    springGrpcVersion = "0.8.0"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    implementation "io.grpc:grpc-netty-shaded:${grpcVersion}"
    runtimeOnly "io.grpc:grpc-services:${grpcVersion}"

    modules {
        module("io.grpc:grpc-netty") {
            replacedBy("io.grpc:grpc-netty-shaded", "Use Netty shaded instead of regular Netty")
        }
    }
    testImplementation 'io.projectreactor:reactor-test'

    // protobuf
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: protobufVersion

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-core'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'


    // jdbc driver
    runtimeOnly 'org.voltdb:voltdbclient:14.0.1'
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    runtimeOnly files('libs/tibero7-jdbc.jar')

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    clean {
        delete generatedFilesBaseDir
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.grpc:spring-grpc-dependencies:$springGrpcVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
